tmux new-session -d -s point1
tmux attach -t point1
salloc -N 1 -p multigpu --gres=gpu:v100-sxm2:4 --cpus-per-task=8 --mem=128Gb  --time=1-00:00:00
conda activate point


##### UNT ####
module load cuda/102/toolkit/10.2.89
module unload gcc/5.5.0   
module load gcc/8.1.0  
export CC=/cm/shared/utils/GCC/8.1.0/bin/gcc
export CXX=/cm/shared/utils/GCC/8.1.0/bin/g++
conda activate im2vec



##### NEU ####
module load cuda/11.0
module unload gcc/5.5.0   
module load gcc/8.1.0 
export CC=/shared/centos7/gcc/8.1.0/bin/gcc
export CXX=/shared/centos7/gcc/8.1.0/bin/g++
conda activate im2vec




nohup python main.py --batch_size 64 --epoch 80 --learning_rate 0.001 --frequency 200 --paths 8 --segments 5 --zdim 1024 --msg bs64-e80-lr001-path8-seg5-zdim1024 > nohup/bs64-e80-lr001-path8-seg5-zdim1024.out &

nohup python main.py --batch_size 64 --epoch 80 --learning_rate 0.001 --frequency 200 --paths 5 --segments 3 --zdim 1024 --msg bs64-e80-lr001-path5-seg3-zdim1024 > nohup/bs64-e80-lr001-path5-seg3-zdim1024.out &

python rendering.py --use_blob

python rendering.py --target images/demo1_64.jpg
python rendering.py --target images/demo1_128.jpg
python rendering.py --target images/demo1_256.jpg
python rendering.py --target images/demo1_512.jpg

python rendering.py --target images/demo2_30.jpg
python rendering.py --target images/demo2_60.jpg
python rendering.py --target images/demo2_600.jpg
python rendering.py --target images/demo2_1200.jpg
python rendering.py --target images/demo2_2400.jpg


python debug_rendering.py --target ../redering/images/demo1_64.jpg

scp zq0020@talon3.hpc.unt.edu:/work/zq0020/diffvg/pair/redering/results/painterly_rendering/demo2_2400_iter_499.svg /Users/melody/Downloads/AuthorKit21/results/svg_results_varResolution/

cd /scratch/ma.xu1/pointsMLP/scene_seg
tmux new-session -d -s point1
tmux attach -t point1
salloc -N 1 -p multigpu --gres=gpu:v100-sxm2:1 --cpus-per-task=8 --mem=128Gb  --time=1-00:00:00
conda activate point
nohup python train.py --model PointNetSeg --msg lr1 --train_batch_size 32 --workers 8 --learning_rate 0.1 > nohup/PointNetSeg_lr1.out &


CUDA_VISIBLE_DEVICES=0 nohup python main.py --learning_rate 0.1 --model RealAE --loss l1 --pretained_encoder --msg lr01path128epoch300lossl1 > nohup/RealAE_lr01path128epoch300lossl1.out &
CUDA_VISIBLE_DEVICES=1 nohup python main.py --learning_rate 0.1 --model RealAE --loss l2 --pretained_encoder --msg lr01path128epoch300lossl2 > nohup/RealAE_lr01path128epoch300lossl2.out &
CUDA_VISIBLE_DEVICES=0 nohup python main.py --learning_rate 0.1 --model RealAE --loss l2 --pretained_encoder --epoch 500 --paths 64 --msg lr01path64epoch500lossl2 > nohup/RealAE_lr01path64epoch500lossl2.out &
python validate.py --learning_rate 0.1 --model RealAE --loss l2 --pretained_encoder --epoch 500 --paths 64 --msg lr01path64epoch500lossl2




nohup python main.py --learning_rate 0.001 --model ResNetAE --loss l2 --optimizer adam --pretained_encoder --msg lr01path128epoch300lossl1 > nohup/RealAE_lr01path128epoch300lossl1.out &

CUDA_VISIBLE_DEVICES=2 nohup python main.py --learning_rate 0.001 --model ResNetAE --loss l2 --optimizer adam --msg adam_test1_epoch50 --epoch 50 >nohup/ResNetAE_adam_test1_epoch50.out &


CUDA_VISIBLE_DEVICES=0 nohup python main.py --learning_rate 0.001 --model PositionResNetAE --loss l2 --optimizer adam --msg adam_test1 >nohup/PositionResNetAE_adam_test1.out &

CUDA_VISIBLE_DEVICES=1 nohup python main.py --learning_rate 0.001 --model ParampositionResNetAE --loss l2 --optimizer adam --msg adam_test1 >nohup/ParampositionResNetAE_adam_test1.out &

CUDA_VISIBLE_DEVICES=2 nohup python main.py --learning_rate 0.001 --model LNResNetAE --loss l2 --optimizer adam --msg adam_test1 >nohup/LNResNetAE_adam_test1.out &

CUDA_VISIBLE_DEVICES=3 nohup python main.py --learning_rate 0.001 --model NonormResNetAE --loss l2 --optimizer adam --msg adam_test1 >nohup/NonormResNetAE_adam_test1.out &

CUDA_VISIBLE_DEVICES=3 nohup python main.py --learning_rate 0.001 --model ResNetAE --loss l2 --optimizer adam --msg adam_test2 >nohup/ResNetAE_adam_test2.out &

CUDA_VISIBLE_DEVICES=0 nohup python main.py --learning_rate 0.001 --model ViTAE --loss l2 --optimizer adam --msg demo1 --paths 197 --zdim 384 > nohup/ViTAE_demo1.out &

CUDA_VISIBLE_DEVICES=1 nohup python main.py --learning_rate 0.001 --model ViTAE --loss l2 --optimizer adam --msg demo2_epoch50 --paths 197 --zdim 384 --epoch 50 > nohup/ViTAE_demo2.out &


CUDA_VISIBLE_DEVICES=0 nohup python main.py --model ResNetAE4 --msg demo1 > nohup/ResNetAE4_demo1.out &
CUDA_VISIBLE_DEVICES=1 nohup python main.py --model ResNetAE --msg sgd_lr0.1 --learning_rate 0.1 --optimizer sgd > nohup/ResNetAE_sgd_lr0.1.out &


CUDA_VISIBLE_DEVICES=0 nohup python main.py --model ResNetAE --zdim 512 --msg zdim512 > nohup/ResNetAE_zdim512.out &
CUDA_VISIBLE_DEVICES=1 nohup python main.py --model ResNetAE --zdim 1024 --msg zdim1024 > nohup/ResNetAE_zdim1024.out &
CUDA_VISIBLE_DEVICES=2 nohup python main.py --model ResNetAE --zdim 1536 --msg zdim1536 > nohup/ResNetAE_zdim1536.out &
CUDA_VISIBLE_DEVICES=3 nohup python main.py --model ResNetAE --zdim 3096 --msg zdim3096 > nohup/ResNetAE_zdim3096.out &


CUDA_VISIBLE_DEVICES=2 nohup python main.py --model ResNetAE --paths 256 --msg path256 > nohup/ResNetAE_path256.out &
CUDA_VISIBLE_DEVICES=3 nohup python main.py --model ResNetAE --paths 196 --msg path196 > nohup/ResNetAE_path196.out &



CUDA_VISIBLE_DEVICES=0 nohup python main.py --model ResNetAE --loss l1 --msg loss_l1 > nohup/ResNetAE_loss_l1.out &
CUDA_VISIBLE_DEVICES=1 nohup python main.py --model ResNetAE --learning_rate 0.01 --msg lr0.01 > nohup/ResNetAE_lr0.01.out &
CUDA_VISIBLE_DEVICES=2 nohup python main.py --model SEResNet50AE --msg demo1 > nohup/SEResNet50AE_demo1.out &
CUDA_VISIBLE_DEVICES=3 nohup python main.py --model ResNetAE --epoch 1500 --msg epoch100 > nohup/ResNetAE_epoch1500.out &



CUDA_VISIBLE_DEVICES=0 nohup python main.py --model ResNetAE --segments 4 --msg segments4 > nohup/ResNetAE_segments4.out &
CUDA_VISIBLE_DEVICES=1 nohup python main.py --model ResNetAE --segments 5 --msg segments5 > nohup/ResNetAE_segments5.out &
CUDA_VISIBLE_DEVICES=2 nohup python main.py --model ResNetAE --learning_rate 0.0005 --msg lr0.0005 > nohup/ResNetAE_lr0.0005.out &
CUDA_VISIBLE_DEVICES=3 nohup python main.py --model ResNetAE --batch_size 16 --msg bs16 > nohup/ResNetAE_bs16.out &



To DO:
CUDA_VISIBLE_DEVICES=0 nohup python main.py --model ResNetAE5 --msg demo1 > nohup/ResNetAE5_demo1.out &



